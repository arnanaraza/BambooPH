pacman::p_load(raster, randomForest,rgeos, rgdal, caret, ranger,
hydroGOF, Metrics, plyr,dplyr, reshape2,sn,tidyverse,fGarch)
## Global variables
mainDir <- 'D:/BambooPH'
dataDir <- 'D:/BambooPH/data'
resultsDir <- 'D:/BambooPH/results'
setwd(dataDir)
covs <- stack('covs_100m.tif') #predictors raster stack
names(covs) <- c('blue'	,'green'	,'red',	'nir','re', 'swir',
'vv', 'vh','dem', 'ndvi', 'evi', 'vvvh')
td.fin <- readOGR(getwd(), 'td') #reference data
vt <- read.csv('vt.csv') #predictors values for each reference data
## Model training
set.seed (123)
train.idx <- sample(nrow(td.fin), 0.5 * nrow(td.fin)) #TD proportion
vt.train <- vt[train.idx, ]
# Add a binary class of pixels with and without bamboo
l <- length(vt.train)
vt.train <- na.omit(vt.train)
model_01 <- randomForest(x=vt.train[,-c(l,l-1)], y=as.factor(vt.train$bin),
importance = TRUE)
model_01
bin <- predict(covs, model=model_01, na.rm=TRUE)
names(bin) <- 'bin'
covs <- addLayer(covs, bin)
# Bamboo cover model training
rg.vt  <- train(class~., tuneLength = 10,
data = vt.train,
method = "ranger", importance = 'permutation',
trControl = trainControl(method = "cv",
number = 10))
#wall-to-wall and export
pred <- predict(covs, model=rg.vt, na.rm=TRUE)
pred[pred<=3] <- 0 #set minimum - no 3% bamboo cover as per inventory
cellStats(pred/100, 'sum')
plot(pred)
